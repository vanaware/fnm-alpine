name: Alpine

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - main
    tags:
      - "v*.*.*"
jobs:
  build_static_linux_binary:
    if: github.repository == 'vanaware/fnm-alpine'
    name: "Build static Linux binary"
    runs-on: ubuntu-latest
    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: stable
        targets: x86_64-unknown-linux-musl
    - uses: Swatinem/rust-cache@v2
      with:
        key: static-linux-binary
    - name: Install musl tools
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends musl-tools
    - uses: actions/checkout@v3
    - name: Build release binary
      run: cargo build --release --target x86_64-unknown-linux-musl
    - name: Strip binary from debug symbols
      run: strip target/x86_64-unknown-linux-musl/release/fnm
    - name: Upload artifact for Binary Release
      uses: actions/upload-artifact@v3
      with:
        name: fnm-alpine
        path: target/x86_64-unknown-linux-musl/release/fnm
        if-no-files-found: error
        retention-days: 1

  release_binary:
    needs: [build_static_linux_binary]
    name: "Release binary"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: fnm-alpine
          path: target/release
      - name: mark binary as executable
        run: chmod +x target/release/fnm
      - name: Zip Folder
        run: zip fnm-alpine.zip -j target/release/fnm
      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: fnm-alpine.zip
